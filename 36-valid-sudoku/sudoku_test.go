package sudoku

import (
	"strconv"
	"testing"
)

func Test_isValidSudoku(t *testing.T) {
	type args struct {
		board [][]byte
	}
	tests := []struct {
		args args
		want bool
	}{
		{
			args: args{
				board: [][]byte{
					{5, 3, '.', '.', 7, '.', '.', '.', '.'},
					{6, '.', '.', 1, 9, 5, '.', '.', '.'},
					{'.', 9, 8, '.', '.', '.', '.', 6, '.'},
					{8, '.', '.', '.', 6, '.', '.', '.', 3},
					{4, '.', '.', 8, '.', 3, '.', '.', 1},
					{7, '.', '.', '.', 2, '.', '.', '.', 6},
					{'.', 6, '.', '.', '.', '.', 2, 8, '.'},
					{'.', '.', '.', 4, 1, 9, '.', '.', 5},
					{'.', '.', '.', '.', 8, '.', '.', 7, 9},
				},
			},
			want: true,
		},
		{
			args: args{
				board: [][]byte{
					{8, 3, '.', '.', 7, '.', '.', '.', '.'},
					{6, '.', '.', 1, 9, 5, '.', '.', '.'},
					{'.', 9, 8, '.', '.', '.', '.', 6, '.'},
					{5, '.', '.', '.', 6, '.', '.', '.', 3},
					{4, '.', '.', 8, '.', 3, '.', '.', 1},
					{7, '.', '.', '.', 2, '.', '.', '.', 6},
					{'.', 6, '.', '.', '.', '.', 2, 8, '.'},
					{'.', '.', '.', 4, 1, 9, '.', '.', 5},
					{'.', '.', '.', '.', 8, '.', '.', 7, 9},
				},
			},
			want: false,
		},
	}
	for i, tt := range tests {
		t.Run(strconv.Itoa(i), func(t *testing.T) {
			if got := isValidSudoku(tt.args.board); got != tt.want {
				t.Errorf("isValidSudoku() = %v, want %v", got, tt.want)
			}
		})
	}
}
